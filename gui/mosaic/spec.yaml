ast:
  raw_source: |
    import math
    def f(x):
      if x>0: return math.sqrt(x)
      return 0
  macros: {}
  use_example_if_empty: false

mosaic:
  kind: hex
  rows: 12
  cols: 12
  seed: 7
  edge_thr: 0.55
  # roi_mask: [10,11,12,22,23,24]    # opcjonalnie
  # edge_override: []                # opcjonalnie

control:
  phi: balanced
  lmbd: 0.6
  delta: 0.25

metaspace:
  axes: [Align, J_phi, CR_AST, CR_TO]
  weights: {Align: 1.0, J_phi: 1.0, CR_AST: 0.5, CR_TO: 0.25}
  layers: [struct, mosaic, phi, psi, metrics]
  policies: {preference: accuracy}

optimize:
  lambdas: [0.0, 0.25, 0.5, 0.75]
  deltas:  [0.0, 0.25, 0.5]
  edge_thrs: [0.45, 0.55, 0.6]
  seeds: 60
  objective_weights: {J_phi: 1.0, Align: 1.0, CR_AST: 0.5, CR_TO: 0.25}
